import { basename } from 'path'
import { B, be_ } from '@ctx-core/object'
import type { web_build_Ctx } from './web_build_Ctx.js'
import { node_modules_src_aa_async_b } from './node_modules_src_aa_async_b.js'
const key = 'node_modules_src_basename_aa_async'
export const node_modules_src_basename_aa_async_b:B<web_build_Ctx, typeof key> = be_(key, async (ctx)=>{
	const node_module_src_aa = await node_modules_src_aa_async_b(ctx)
	const src_basename_aa = (
		await Promise.all(node_module_src_aa.map(
			async (node_module_src_a)=>{
				const [node_module_src, ...rest] = node_module_src_a
				return [
					basename(node_module_src),
					...rest.map(node_module_src=>
						basename(node_module_src)
					)
				]
			}, []))
	)
	return src_basename_aa
})
export type node_modules_src_basename_aa_async_T = Promise<string[][]>
